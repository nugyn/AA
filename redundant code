/Low: 1000 Vertices
			//Medium: 100 Vertices
			//High: 10 Vertices
			Scanner sc = new Scanner(System.in);

			System.out.println("Specify the number of Edges, (please choose a number above 1000, and increments of 500): " );
			int amtEdges = Integer.parseInt(sc.nextLine());
			System.out.println("Specify the Graph Density, LOW, MEDIUM or HIGH, (L, M or H): " );
			String density = sc.nextLine();

			if(density.equalsIgnoreCase("L")){
				try {
					BufferedReader reader = new BufferedReader(new FileReader(inputFilename));
					String line;
					String delimiter = ",";
					String[] tokens;
					String srcLabel, tarLabel;
					int weight;
					int i = 0;
					while ((line = reader.readLine()) != null && i <= amtEdges ) {
						tokens = line.split(delimiter);
						srcLabel = tokens[0];
						tarLabel = tokens[1];
						weight = Integer.parseInt(tokens[2]);
						graph.addVertex(srcLabel);
						graph.addVertex(tarLabel);
						graph.addEdge(srcLabel, tarLabel, weight);
						System.out.println("Creating low density Graph..." + i); 
						i++;
					}
				}
				catch (FileNotFoundException ex) {
					System.err.println("File " + args[1] + " not found.");
				}
				catch(IOException ex) {
					System.err.println("Cannot open file " + args[1]);
				}
			} //end of LOW DENSITY

			else if(density.equalsIgnoreCase("M")){
				try {
					BufferedReader reader = new BufferedReader(new FileReader(inputFilename));
					String line;
					String line2;
					String delimiter = ",";
					String[] tokens;
					String srcLabel, tarLabel;
					int weight;
					int i = 0;
					int j = 0;
					int amtVertices = 100;
					while ((line = reader.readLine()) != null && i <= amtVertices) {
						tokens = line.split(delimiter);
						srcLabel = tokens[0];
						tarLabel = tokens[1];
						weight = Integer.parseInt(tokens[2]);
						graph.addVertex(srcLabel);
						graph.addVertex(tarLabel);
						System.out.println("Adding Vertex..." + i); 
						i++;
					}
					while ((line2 = reader.readLine()) != null && j <= amtEdges) {
						tokens = line2.split(delimiter);
						srcLabel = tokens[0];
						tarLabel = tokens[1];
						weight = Integer.parseInt(tokens[2]);
						graph.addEdge(srcLabel, tarLabel, weight);
						System.out.println("Edges..." + j); 
						j++;
					}
				}
				catch (FileNotFoundException ex) {
					System.err.println("File " + args[1] + " not found.");
				}
				catch(IOException ex) {
					System.err.println("Cannot open file " + args[1]);
				}
			} 

		else if(density.equalsIgnoreCase("H"))
			try {
				BufferedReader reader = new BufferedReader(new FileReader(inputFilename));
		    	String line;
		    	String delimiter = ",";
		    	String[] tokens;
		    	String srcLabel, tarLabel;
				int weight;
				int i = 0;
				int j = 0;
				int amtVertices = 10;

		    	while ((line = reader.readLine()) != null && i < amtVertices) {
					tokens = line.split(delimiter);
					srcLabel = tokens[0];
					tarLabel = tokens[1];
					graph.addVertex(srcLabel);
					graph.addVertex(tarLabel);
					System.out.println("Adding Vertex..." + i); 
					i++;
				}
				while ((line = reader.readLine()) != null && j < amtEdges) {
					tokens = line.split(delimiter);
					srcLabel = tokens[0];
					tarLabel = tokens[1];
					weight = Integer.parseInt(tokens[2]);
					graph.addEdge(srcLabel, tarLabel, weight);
					System.out.println("Edges..." + i); 
					j++;
				}
			}
			catch (FileNotFoundException ex) {
				System.err.println("File " + args[1] + " not found.");
			}
			catch(IOException ex) {
				System.err.println("Cannot open file " + args[1]);
			}
		}
